---

- name: disable selinux on the server
  selinux:
    state: disabled
  register: sestatus

- name: restart the server
  shell: "sleep 5 && reboot" 
  async: 1
  poll: 0
  when: sestatus.changed == "true"

- name: wait for the server to come online
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 22
    delay: 120
    timeout: 300
    connect_timeout: 30
  connection: local
  when: sestatus.changed == "true"

- name: create a directory
  file:
    path: /opt/docker
    state: directory

- name: copy the docker engine
  copy:
    src: "files/{{ item }}"
    dest: /opt/docker
  with_items:
    - "docker-engine-selinux-17.05.0.ce-1.el7.centos.noarch.rpm"
    - "docker-engine-17.05.0.ce-1.el7.centos.x86_64.rpm"

- name: install docker
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - "/opt/docker/docker-engine-selinux-17.05.0.ce-1.el7.centos.noarch.rpm"
    - "/opt/docker/docker-engine-17.05.0.ce-1.el7.centos.x86_64.rpm"
    - "git"

- name: remove the docker directory
  file:
    path: /opt/docker
    state: absent

- name: clone the git repository
  git:
    clone: yes
    repo: "https://github.com/vkperumal/thoughtworks.git"
    dest: /opt/thoughtworks


- name: start the docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: initiate docker swarm
  shell: "docker swarm init --advertise-addr {{ inventory_hostname }}"

- name: create docker secrets
  shell: "echo '{{ item.src }}' | docker secret create {{ item.dest }} - " 
  with_items:
    - { src: '{{ db_password }}', dest: db_password }
    - { src: '{{ db_root_password }}' , dest: db_root_password }

- name: start the stack
  shell: "docker stack deploy --compose-file=mediawiki.yml mediawiki"
  args:
    chdir: "/opt/thoughtworks"
